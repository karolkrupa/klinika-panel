<?php

namespace App\Controller\Admin;

use App\Admin\Field\AddressField;
use App\Entity\Patient;
use App\Form\AddressType;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\Field;
use EasyCorp\Bundle\EasyAdminBundle\Field\FormField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IntegerField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TelephoneField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use Symfony\Component\Form\Extension\Core\Type\FormType;

class PatientCrudController extends AbstractCrudController
{
    public function detail(AdminContext $context)
    {
        return parent::detail($context); // TODO: Change the autogenerated stub
    }


    public static function getEntityFqcn(): string
    {
        return Patient::class;
    }

    public function configureCrud(Crud $crud): Crud
    {
        return $crud
            ->setEntityLabelInSingular('Pacjent')
            ->setEntityLabelInPlural('Pacjenci')
            ->setPageTitle(Crud::PAGE_NEW, 'Dodaj nowego pacjenta')
            ->overrideTemplate('crud/detail', 'admin/patient/detail.html.twig')
            ;
    }

    public function configureActions(Actions $actions): Actions
    {
        $detailAction = Action::new(Action::DETAIL)
            ->linkToCrudAction(Action::DETAIL)
            ->setTemplatePath('admin/patient/detail.html.twig')
        ;

        return $actions
            ->add(Crud::PAGE_INDEX, Action::DETAIL)
            ->update(Crud::PAGE_INDEX, Action::NEW, function (Action $action) {
                return $action->setLabel('Dodaj pacjenta');
            });
    }

    public function configureFields(string $pageName): iterable
    {
        return [
            Field::new('firstName', 'ImiÄ™')
                ->setColumns(6),
            Field::new('lastName', 'Nazwisko')
                ->setColumns(6),
            TextField::new('pesel', 'PESEL')
                ->setColumns(6),
            TelephoneField::new('phoneNumber', 'Nr telefonu')
                ->setColumns(6),
            FormField::addPanel("Adres"),
            AddressField::new('address', 'Adres')
//            Field::new('address', false)
//                ->setFieldFqcn(FormType::class)
//                ->setFormType(AddressType::class),
        ];
    }


    /*
    public function configureFields(string $pageName): iterable
    {
        return [
            IdField::new('id'),
            TextField::new('title'),
            TextEditorField::new('description'),
        ];
    }
    */
}
